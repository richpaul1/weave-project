{
  "timestamp": "2025-10-10T16:17:49.398737",
  "models_tested": [
    "Ollama (Local)",
    "OpenAI (GPT-4)"
  ],
  "test_queries": [
    {
      "id": "q1",
      "prompt": "How do I trace my LLM calls with Weave?",
      "category": "tracing",
      "expected_features": [
        "tracing",
        "weave",
        "llm"
      ],
      "context": "User wants to understand Weave tracing functionality"
    },
    {
      "id": "q2",
      "prompt": "What is a Weave Dataset and how do I create one?",
      "category": "datasets",
      "expected_features": [
        "dataset",
        "creation",
        "weave"
      ],
      "context": "User needs to understand Weave datasets"
    },
    {
      "id": "q3",
      "prompt": "Show me how to use weave.Model to track my models",
      "category": "models",
      "expected_features": [
        "model",
        "tracking",
        "versioning"
      ],
      "context": "User wants to track model versions with Weave"
    },
    {
      "id": "q4",
      "prompt": "Explain Weave evaluation framework and show me an example",
      "category": "evaluation",
      "expected_features": [
        "evaluation",
        "framework",
        "example"
      ],
      "context": "User needs to understand Weave evaluation capabilities"
    },
    {
      "id": "q5",
      "prompt": "How do I use the evaluation playground in Weave?",
      "category": "playground",
      "expected_features": [
        "playground",
        "evaluation",
        "ui"
      ],
      "context": "User wants to use Weave's evaluation playground"
    },
    {
      "id": "q6",
      "prompt": "What are Weave operations and how do I create them?",
      "category": "operations",
      "expected_features": [
        "operations",
        "weave.op",
        "decorator"
      ],
      "context": "User needs to understand Weave operations"
    }
  ],
  "results": {
    "Ollama (Local)": {
      "output": {
        "has_image": {
          "true_count": 2,
          "true_fraction": 0.3333333333333333
        },
        "image_count": {
          "mean": 0.3333333333333333
        },
        "word_count": {
          "mean": 356.1666666666667
        },
        "char_count": {
          "mean": 2229.8333333333335
        },
        "error": {
          "true_count": 0,
          "true_fraction": 0.0
        }
      },
      "response_quality_scorer": {
        "score": {
          "mean": 0.7000000000000001
        },
        "word_count": {
          "mean": 356.1666666666667
        },
        "has_error": {
          "true_count": 0,
          "true_fraction": 0.0
        }
      },
      "weave_relevance_scorer": {
        "score": {
          "mean": 0.9500000000000001
        },
        "keyword_count": {
          "mean": 2.8333333333333335
        }
      },
      "image_inclusion_scorer": {
        "score": {
          "mean": 0.6666666666666666
        },
        "has_image": {
          "true_count": 2,
          "true_fraction": 0.3333333333333333
        },
        "image_count": {
          "mean": 0.3333333333333333
        },
        "bonus": {
          "mean": 0.03333333333333333
        }
      },
      "model_latency": {
        "mean": 14.819514513015747
      }
    },
    "OpenAI (GPT-4)": {
      "output": {
        "has_image": {
          "true_count": 1,
          "true_fraction": 0.16666666666666666
        },
        "image_count": {
          "mean": 0.16666666666666666
        },
        "word_count": {
          "mean": 194.16666666666666
        },
        "char_count": {
          "mean": 1252.5
        },
        "error": {
          "true_count": 0,
          "true_fraction": 0.0
        }
      },
      "response_quality_scorer": {
        "score": {
          "mean": 1.0
        },
        "word_count": {
          "mean": 194.16666666666666
        },
        "has_error": {
          "true_count": 0,
          "true_fraction": 0.0
        }
      },
      "weave_relevance_scorer": {
        "score": {
          "mean": 1.0
        },
        "keyword_count": {
          "mean": 3.8333333333333335
        }
      },
      "image_inclusion_scorer": {
        "score": {
          "mean": 0.5833333333333334
        },
        "has_image": {
          "true_count": 1,
          "true_fraction": 0.16666666666666666
        },
        "image_count": {
          "mean": 0.16666666666666666
        },
        "bonus": {
          "mean": 0.016666666666666666
        }
      },
      "model_latency": {
        "mean": 10.46320148309072
      }
    }
  }
}